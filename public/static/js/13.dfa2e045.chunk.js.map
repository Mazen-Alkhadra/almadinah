{"version":3,"sources":["pages/admin section/Financial/Payments/index.js"],"names":["DS","store","finCustomersSuppliersDataLookup","name","RequireFetchData","props","customers","t","useTranslation","dataGrid","createRef","basic","title","ref","dataSource","finPaymentsDataGrid","showBorders","showColumnLines","columnHidingEnabled","wordWrapEnabled","columnAutoWidth","columnChooser","enabled","mode","remoteOperations","onInitNewRow","e","data","at","Date","loadPanel","indicatorSrc","LoadingGifImage","onRowPrepared","rowType","key","rowElement","style","backgroundColor","visible","useIcons","allowAdding","allowUpdating","allowDeleting","itemType","colCount","colSpan","dataField","isRequired","caption","sortIndex","sortOrder","dataType","displayExpr","valueExpr","allowClearing","format","Configs","DECIMAL_NUM_FORMAT","column","summaryType","displayFormat","valueFormat","precision"],"mappings":"2GAAA,2HAsGMA,EAAK,CACP,CACIC,MAAOC,IACPC,KAAM,cAICC,uBAhGE,SAACC,GAAW,IACjBC,EAAeD,EAAfC,UACAC,EAAMC,cAAND,EACFE,EAAWC,sBAEjB,OACI,eAAC,IAAD,CAASC,OAAK,EAAd,UACI,cAAC,IAAD,CAAYC,MAAOL,EAAE,cACrB,cAAC,IAAD,CAASI,OAAK,EAAd,SACI,eAAC,IAAD,CACIE,IAAKJ,EACLK,WAAYC,IACZC,aAAW,EACXC,iBAAe,EACfC,qBAAmB,EACnBC,iBAAe,EACfC,iBAAe,EACfC,cAAe,CAAEC,SAAS,EAAMC,KAAM,UACtCC,kBAAgB,EAChBC,aAAc,SAACC,GACXA,EAAEC,KAAKC,GAAK,IAAIC,MAGpBC,UAAW,CAAEC,aAAcC,KAC3BC,cAAe,SAACP,GACM,SAAdA,EAAEQ,SAAsBR,EAAES,IAAM,IAAM,IACtCT,EAAEU,WAAWC,MAAMC,gBAAkB,yBAjBjD,UAqBI,cAAC,UAAD,CAASf,KAAK,aACd,cAAC,YAAD,CAAWgB,SAAO,IAClB,cAAC,cAAD,CAAaA,SAAO,IACpB,cAAC,YAAD,CAAWhB,KAAK,YAChB,cAAC,cAAD,CAAagB,SAAO,IACpB,eAAC,UAAD,CACIhB,KAAK,QACLiB,UAAQ,EACRC,aAAW,EACXC,eAAa,EACbC,eAAa,EALjB,UAOI,cAAC,QAAD,IACA,cAAC,OAAD,UACI,eAAC,OAAD,CAAMC,SAAS,QAAQC,SAAU,EAAGC,QAAS,EAA7C,UACI,cAAC,OAAD,CAAMC,UAAU,iBAChB,cAAC,OAAD,CAAMA,UAAU,KAAKC,YAAU,IAC/B,cAAC,OAAD,CAAMD,UAAU,aAAaC,YAAU,IACvC,cAAC,OAAD,CAAMD,UAAU,QAAQC,YAAU,IAClC,cAAC,OAAD,CAAMD,UAAU,QAAQD,QAAS,YAK7C,cAAC,SAAD,CAAQC,UAAU,eAAeE,QAAS1C,EAAE,gBAAiB2C,UAAW,EAAGC,UAAU,SAErF,cAAC,SAAD,CAAQJ,UAAU,KAAKK,SAAS,WAAWH,QAAS1C,EAAE,eAEtD,eAAC,SAAD,CAAQwC,UAAU,aAAaE,QAAS1C,EAAE,YAA1C,UACI,cAAC,SAAD,CACIO,WAAYR,EACZ+C,YAAY,WACZC,UAAU,aACVC,eAAa,IAEjB,cAAC,eAAD,OAIJ,cAAC,SAAD,CAAQR,UAAU,QAAQE,QAAS1C,EAAE,SAAU6C,SAAS,SAASI,OAAQC,IAAQC,qBACjF,cAAC,SAAD,CAAQX,UAAU,QAAQE,QAAS1C,EAAE,YAErC,cAAC,UAAD,UACI,cAAC,YAAD,CACIoD,OAAO,QACPC,YAAY,MACZC,cAAa,UAAKtD,EAAE,SAAP,SACbuD,YAAa,CAAEC,UAAW,iBAmBZ/D","file":"static/js/13.dfa2e045.chunk.js","sourcesContent":["import React, { createRef } from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport DataGrid, { Column, Editing, FilterPanel, FilterRow, Form, Popup, Scrolling, SearchPanel, Sorting, Lookup, RequiredRule, Summary, TotalItem } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/ui/form';\r\nimport 'devextreme-react/ui/text-area';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PageHeader } from '../../../../components';\r\nimport { finPaymentsDataGrid, finCustomersSuppliersDataLookup, } from '../../../../Data Stores';\r\nimport LoadingGifImage from '../../../../res/images/loading.gif';\r\nimport { RequireFetchData } from '../../../../middlewares/HOC';\r\nimport { Configs } from '../../../../res';\r\n\r\n\r\nconst Payments = (props) => {\r\n    const { customers, } = props;\r\n    const { t } = useTranslation();\r\n    const dataGrid = createRef();\r\n\r\n    return (\r\n        <Segment basic>\r\n            <PageHeader title={t('Payments')} />\r\n            <Segment basic>\r\n                <DataGrid\r\n                    ref={dataGrid}\r\n                    dataSource={finPaymentsDataGrid}\r\n                    showBorders\r\n                    showColumnLines\r\n                    columnHidingEnabled\r\n                    wordWrapEnabled\r\n                    columnAutoWidth\r\n                    columnChooser={{ enabled: true, mode: 'select' }}\r\n                    remoteOperations\r\n                    onInitNewRow={(e) => {\r\n                        e.data.at = new Date();\r\n                    }}\r\n\r\n                    loadPanel={{ indicatorSrc: LoadingGifImage }}\r\n                    onRowPrepared={(e) => {\r\n                        if (e.rowType === \"data\" && e.key % 2 !== 0) {\r\n                            e.rowElement.style.backgroundColor = \"rgba(150,150,20,0.3)\";\r\n                        }\r\n                    }}\r\n                >\r\n                    <Sorting mode='multiple' />\r\n                    <FilterRow visible />\r\n                    <FilterPanel visible />\r\n                    <Scrolling mode=\"virtual\" />\r\n                    <SearchPanel visible />\r\n                    <Editing\r\n                        mode='popup'\r\n                        useIcons\r\n                        allowAdding\r\n                        allowUpdating\r\n                        allowDeleting\r\n                    >\r\n                        <Popup />\r\n                        <Form >\r\n                            <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                                <Item dataField=\"serialNumber\" />\r\n                                <Item dataField=\"at\" isRequired />\r\n                                <Item dataField=\"customerId\" isRequired />\r\n                                <Item dataField=\"value\" isRequired />\r\n                                <Item dataField=\"notic\" colSpan={2} />\r\n                            </Item>\r\n                        </Form>\r\n                    </Editing>\r\n\r\n                    <Column dataField=\"serialNumber\" caption={t('SerialNumber')} sortIndex={0} sortOrder='desc' />\r\n\r\n                    <Column dataField=\"at\" dataType=\"datetime\" caption={t('CreatedAt')} />\r\n\r\n                    <Column dataField=\"customerId\" caption={t('Customer')}>\r\n                        <Lookup\r\n                            dataSource={customers}\r\n                            displayExpr=\"fullName\"\r\n                            valueExpr='idCustomer'\r\n                            allowClearing\r\n                        />\r\n                        <RequiredRule />\r\n                    </Column>\r\n\r\n\r\n                    <Column dataField=\"value\" caption={t('Value')} dataType='number' format={Configs.DECIMAL_NUM_FORMAT} />\r\n                    <Column dataField=\"notic\" caption={t('Notice')} />\r\n\r\n                    <Summary>\r\n                        <TotalItem\r\n                            column=\"value\"\r\n                            summaryType=\"sum\"\r\n                            displayFormat={`${t('Total')}: {0}`}\r\n                            valueFormat={{ precision: 2 }}\r\n                        />\r\n                    </Summary>\r\n\r\n                </DataGrid>\r\n            </Segment>\r\n\r\n\r\n        </Segment >\r\n    );\r\n};\r\n\r\nconst DS = [\r\n    {\r\n        store: finCustomersSuppliersDataLookup,\r\n        name: 'customers'\r\n    },\r\n];\r\n\r\nexport default RequireFetchData(Payments, DS);\r\n"],"sourceRoot":""}